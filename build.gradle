plugins {
    id 'java'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.0.46'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

group = 'com.test'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'net.serenity-bdd:serenity-junit5:4.1.14'
    testImplementation('net.serenity-bdd:serenity-core:4.1.14')
    implementation 'net.serenity-bdd:serenity-rest-assured:4.1.14'
    implementation 'net.serenity-bdd:serenity-ensure:4.1.14'
    implementation 'net.serenity-bdd:serenity-reports:4.1.14'
    testImplementation 'io.rest-assured:json-path:5.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.0'
    testRuntimeOnly   'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.json:json:20240303'

    // Add logging dependencies
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation 'org.slf4j:slf4j-api:2.0.9'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "failed", "skipped"
        showStandardStreams = true
    }
    systemProperties System.properties
    systemProperty "serenity.outputDirectory", "target/site/serenity"
    systemProperty "junit.jupiter.extensions.autodetection.enabled", "true"
    systemProperty "serenity.requirements.dir", "src/test/resources/features"
    systemProperty "serenity.project.name", "Test Automation Framework"
    finalizedBy 'aggregate'
}

serenity {
    reports = ["single-page-html", "html", "json"]
    testRoot = "java"
    requirementsBaseDir = "src/test"
}

gradle.startParameter.continueOnFailure = true

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

tasks.named('aggregate') {
    doLast {
        println "Serenity reports generated in: target/site/serenity"
    }
}

tasks.named('reports') {
    dependsOn 'clean', 'test', 'aggregate'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
